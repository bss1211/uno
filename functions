def my_function():
  print("Hello from a function")

my_function()


def my_function(country = "India"):
  print("I am from " + country)

my_function("Dubai")
my_function("Fiji")
my_function()
my_function("Nepal")

def my_function(food):
  for x in food:
    print(x)

fruits = ["mango", "cherry", "banana"]

my_function(fruits)


def my_function(x):
  return 5 * x

print(my_function(3))
print(my_function(5))
print(my_function(9))


def functionname( parameters ):
   "function_docstring"
   function_suite
   return [expression]
   
total=sum(10, 20) 
print(total)
total=sum(5, sum(10, 20))
print(total   

def functionname( parameters ):
   "function_docstring"
   function_suite
   return [expression]
   
def fun():
  print("Welcome!!")   
  
   
def printme( str ):
   "This prints a passed string into this function"
   print str
   return   
   
 def evenOdd(x):
    if (x % 2 == 0):
        print("even")
    else:
        print("odd")  
        
 def myFun(x, y=50):
    print("x: ", x)
    print("y: ", y)       
    
 def student(firstname, lastname):
    print(firstname, lastname)   
    
def myFun(*argv):
    for arg in argv:
        print(arg)    
        
def myFun(**kwargs):
    for key, value in kwargs.items():
        print("%s == %s" % (key, value))        
        
def greet(*names):
	i=0
	print('Hello ', end='')
	while len(names) > i:
		print(names[i], end=', ')
		i+=1        
		
def square_value(num):
    """This function returns the square
    value of the entered number"""
    return num**2
 
 
print(square_value(2))
print(square_value(-4))		


def myFun(x):
    x[0] = 20
 
 
# Driver Code (Note that lst is modified
# after function call.
lst = [10, 11, 12, 13, 14, 15]
myFun(lst)
print(lst)


def swap(x, y):
    temp = x
    x = y
    y = temp
    
# Python code to illustrate the cube of a number
# using lambda function
 
 
def cube(x): return x*x*x
 
cube_v2 = lambda x : x*x*x
 
print(cube(7))
print(cube_v2(7))    


def swap(x, y):
    temp = x
    x = y
    y = temp
 
 
# Driver code
x = 2
y = 3
swap(x, y)
print(x)
print(y)

# A simple Python function to check
# whether x is even or odd
 
 
def evenOdd(x):
    if (x % 2 == 0):
        print("even")
    else:
        print("odd")
 
 
# Driver code to call the function
evenOdd(2)
evenOdd(3)

def functionname( parameters ):
   "function_docstring"
   function_suite
   return [expression]
